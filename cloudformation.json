{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation template for JOliverDecor",
  "Mappings": {
    "AWSRegionToAMI": {
      "ap-northeast-1": {
        "AMIID": "ami-c8b016a9"
      },
      "ap-southeast-1": {
        "AMIID": "ami-6d22840e"
      },
      "ap-southeast-2": {
        "AMIID": "ami-73407d10"
      },
      "eu-central-1": {
        "AMIID": "ami-dd12ebb2"
      },
      "eu-west-1": {
        "AMIID": "ami-c8337dbb"
      },
      "us-east-1": {
        "AMIID": "ami-1924770e"
      },
      "us-east-2": {
        "AMIID": "ami-bd3e64d8"
      },
      "us-west-1": {
        "AMIID": "ami-7f004b1f"
      },
      "us-west-2": {
        "AMIID": "ami-56ed4936"
      }
    }
  },
  "Outputs": {
    "ELBDNS": {
      "Description": "Public DNS of the ELB",
      "Value": {
        "Fn::GetAtt": [
          "JODElasticLoadBalancer",
          "DNSName"
        ]
      }
    }
  },
  "Parameters": {
    "InstanceType": {
      "AllowedValues": [
        "t2.micro"
      ],
      "ConstraintDescription": "You can specify only t2.mirco.",
      "Default": "t2.micro",
      "Description": "The EC2 instance type",
      "Type": "String"
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the ECS instances.",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "SSLCert": {
      "Description": "SSL Cert",
      "Type": "String"
    },
    "DBUser": {
      "Description": "Master DB Username",
      "Type": "String"
    },
    "DBPassword": {
      "Description": "Master DB Password",
      "Type": "String"
    },
    "DBHost": {
      "Description": "DB Hostname",
      "Type": "String"
    }
  },
  "Resources": {
    "JODECSCluster": {
      "Type": "AWS::ECS::Cluster"
    },
    "JODInternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "JODVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": "true",
        "EnableDnsSupport": "true",
        "InstanceTenancy": "default"
      }
    },
    "JODSubnet": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": [
        "JODVPC"
      ],
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "CidrBlock": "10.0.1.0/24",
        "VpcId": { "Ref": "JODVPC" }
      }
    },
    "JODVPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": { "Ref": "JODInternetGateway" },
        "VpcId": { "Ref": "JODVPC" }
      }
    },
    "JODVPCPublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": [
        "JODVPC"
      ],
      "Properties": {
        "VpcId": { "Ref": "JODVPC" }
      }
    },
    "JODSubnetRouteTable": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "JODVPCPublicRouteTable",
        "JODSubnet"
      ],
      "Properties": {
        "RouteTableId": { "Ref": "JODVPCPublicRouteTable" },
        "SubnetId": { "Ref": "JODSubnet" }
      }
    },
    "JODGatewayRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "JODInternetGateway",
        "JODVPCPublicRouteTable"
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "JODInternetGateway" },
        "RouteTableId": { "Ref": "JODVPCPublicRouteTable" }
      }
    },
    "JODELBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": [
        "JODVPC"
      ],
      "Properties": {
        "GroupDescription": "Security Group for the JOD ELB",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "ToPort": "80",
            "IpProtocol": "tcp"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "81",
            "ToPort": "81",
            "IpProtocol": "tcp"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "ToPort": "80",
            "IpProtocol": "tcp"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "443",
            "ToPort": "443",
            "IpProtocol": "tcp"
          }
        ],
        "VpcId": { "Ref": "JODVPC" }
      }
    },
    "JODInstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": [
        "JODVPC",
        "JODELBSecurityGroup"
      ],
      "Properties": {
        "GroupDescription": "Security Group for ec2 instances",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "-1",
            "ToPort": "-1",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "FromPort": "80",
            "ToPort": "80",
            "IpProtocol": "tcp",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "JODELBSecurityGroup",
                "GroupId"
              ]
            }
          },
          {
            "FromPort": "81",
            "ToPort": "81",
            "IpProtocol": "tcp",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "JODELBSecurityGroup",
                "GroupId"
              ]
            }
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "22",
            "ToPort": "22",
            "IpProtocol": "tcp"
          }
        ],
        "VpcId": { "Ref": "JODVPC" }
      }
    },
    "JODElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "DependsOn": [
        "JODELBSecurityGroup",
        "JODSubnet"
      ],
      "Properties": {
        "Scheme": "internet-facing",
        "CrossZone": "true",
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "60"
        },
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "30",
          "Target": "TCP:80",
          "Timeout": "5",
          "UnhealthyThreshold": "10"
        },
        "Listeners": [
          {
            "InstancePort": "80",
            "LoadBalancerPort": "80",
            "Protocol": "TCP"
          },
          {
            "InstancePort": "81",
            "LoadBalancerPort": "443",
            "Protocol": "SSL",
            "SSLCertificateId": { "Ref": "SSLCert" }
          }
        ],
        "Policies": [
          {
            "Attributes": [
              {
                "Name": "ProxyProtocol",
                "Value": "true"
              }
            ],
            "InstancePorts": [
              "81"
            ],
            "PolicyName": "EnableProxyProtocolSSL",
            "PolicyType": "ProxyProtocolPolicyType"
          },
          {
            "Attributes": [
              {
                "Name": "ProxyProtocol",
                "Value": "true"
              }
            ],
            "InstancePorts": [
              "80"
            ],
            "PolicyName": "EnableProxyProtocolTCP",
            "PolicyType": "ProxyProtocolPolicyType"
          }
        ],
        "SecurityGroups": [
          { "Ref": "JODELBSecurityGroup" }
        ],
        "Subnets": [
          { "Ref": "JODSubnet" }
        ]
      }
    },
    "JODAutoScalingLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "commands": {
              "01_add_instance_to_cluster": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "#!/bin/bash\n",
                      "echo ECS_CLUSTER=",
                      {
                        "Ref": "JODECSCluster"
                      },
                      " >> /etc/ecs/ecs.config"
                    ]
                  ]
                }
              }
            },
            "files": {
              "/etc/cfn/cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                },
                "group": "root",
                "mode": "000400",
                "owner": "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.JODAutoScalingLaunchConfiguration.Metadata.AWS::CloudFormation::Init\n",
                      "action=/opt/aws/bin/cfn-init -v ",
                      "         --stack ",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "         --resource JODAutoScalingLaunchConfiguration ",
                      "         --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n",
                      "runas=root\n"
                    ]
                  ]
                }
              },
              "/opt/nginx.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "worker_processes 1;\n",
                      "user root;\n",
                      "events {\n",
                      "   worker_connections 1024;\n",
                      "}\n",
                      "http {\n",
                      "   upstream backend {\n",
                      "     server jod-server:3000;\n",
                      "   }\n",
                      "   server {\n",
                      "     listen      80 proxy_protocol;\n",
                      "     server_name joliverdecor.com www.joliverdecor.com;\n",
                      "     location / {\n",
                      "       return 301 https://$host$request_uri;\n",
                      "     }\n",
                      "   }\n",
                      "   server {\n",
                      "     listen                81 proxy_protocol;\n",
                      "     real_ip_header        proxy_protocol;\n",
                      "     server_name           joliverdecor.com www.joliverdecor.com;\n",
                      "     proxy_buffering       off;\n",
                      "     proxy_set_header      Host $host;\n",
                      "     proxy_set_header      X-Real-IP $proxy_protocol_addr;\n",
                      "     proxy_set_header      X-Forwarded-For $proxy_protocol_addr;\n",
                      "     proxy_http_version    1.1;\n",
                      "     client_max_body_size  10M;\n"
                      "     location / {\n",
                      "       proxy_pass http://backend;\n",
                      "     }\n",
                      "   }\n",
                      "}\n"
                    ]
                  ]
                }
              }
            },
            "services": {
              "sysvinit": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "/etc/cfn/cfn-hup.conf",
                    "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          }
        },
        "Comment": "JOD server"
      },
      "Properties": {
        "AssociatePublicIpAddress": "true",
        "IamInstanceProfile": { "Ref": "JODEC2InstanceProfile" },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionToAMI",
            {
              "Ref": "AWS::Region"
            },
            "AMIID"
          ]
        },
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups": [
          { "Ref": "JODInstanceSecurityGroup" }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "yum install -y aws-cfn-bootstrap\n",
                "/opt/aws/bin/cfn-init -v ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource JODAutoScalingLaunchConfiguration ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource JODAutoScalingGroup ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      }
    },
    "JODAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn": [
        "JODVPCGatewayAttachment",
        "JODAutoScalingLaunchConfiguration",
        "JODElasticLoadBalancer",
        "JODSubnet"
      ],
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": "1",
          "Timeout": "PT15M"
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": "1",
          "MinInstancesInService": "1",
          "PauseTime": "PT15M",
          "WaitOnResourceSignals": "true"
        }
      },
      "Properties": {
        "DesiredCapacity": "2",
        "LaunchConfigurationName": {
          "Ref": "JODAutoScalingLaunchConfiguration"
        },
        "LoadBalancerNames": [
          { "Ref": "JODElasticLoadBalancer" }
        ],
        "MaxSize": "4",
        "MinSize": "2",
        "VPCZoneIdentifier": [
          { "Ref": "JODSubnet" }
        ]
      }
    },
    "JODECSService": {
      "Type": "AWS::ECS::Service",
      "DependsOn": [
        "JODAutoScalingGroup"
      ],
      "Properties": {
        "Cluster": { "Ref": "JODECSCluster" },
        "DesiredCount": "2",
        "DeploymentConfiguration": {
          "MaximumPercent": "100",
          "MinimumHealthyPercent": "0"
        },
        "LoadBalancers": [
          {
            "ContainerName": "nginx-proxy",
            "ContainerPort": "80",
            "LoadBalancerName": { "Ref": "JODElasticLoadBalancer" }
          }
        ],
        "Role": { "Ref": "JODECSServiceRole" },
        "TaskDefinition": { "Ref": "JODTaskDefinition" }
      }
    },
    "JODCPUAlarmHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
        "AlarmActions": [
          { "Ref": "JODScaleUpPolicy" }
        ],
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "JODAutoScalingGroup" }
          }
        ],
        "EvaluationPeriods": "2",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "90"
      }
    },
    "JODCPUAlarmLow": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Scale-down if CPU < 70% for 10 minutes",
        "AlarmActions": [
          { "Ref": "JODScaleDownPolicy" }
        ],
        "ComparisonOperator": "LessThanThreshold",
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "JODAutoScalingGroup" }
          }
        ],
        "EvaluationPeriods": "2",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "70"
      }
    },
    "JODScaleDownPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "DependsOn": [
        "JODAutoScalingGroup"
      ],
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": { "Ref": "JODAutoScalingGroup" },
        "Cooldown": "60",
        "ScalingAdjustment": "-1"
      }
    },
    "JODScaleUpPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "DependsOn": [
        "JODAutoScalingGroup"
      ],
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": { "Ref": "JODAutoScalingGroup" },
        "Cooldown": "60",
        "ScalingAdjustment": "1"
      }
    },
    "JODTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Name": "jod-server",
            "Image": "245802995440.dkr.ecr.us-east-1.amazonaws.com/jod:0.0.1",
            "Essential": "true",
            "Memory": "800",
            "PortMappings": [
              {
                "ContainerPort": "3000",
                "HostPort": "3000"
              }
            ],
            "Environment": [
              {
                "Name": "MYSQL_HOST",
                "Value": { "Ref": "DBHost" }
              },
              {
                "Name": "MYSQL_USER",
                "Value": { "Ref": "DBUser" }
              },
              {
                "Name": "MYSQL_PASS",
                "Value": { "Ref": "DBPassword" }
              }
            ]
          },
          {
            "Name": "nginx-proxy",
            "Image": "nginx:1.9.15",
            "Essential": "true",
            "Links": [
              "jod-server"
            ],
            "Memory": "128",
            "MountPoints": [
              {
                "ContainerPath": "/etc/nginx/nginx.conf",
                "ReadOnly": "true",
                "SourceVolume": "nginx-proxy-conf"
              }
            ],
            "PortMappings": [
              {
                "ContainerPort": "80",
                "HostPort": "80"
              },
              {
                "ContainerPort": "81",
                "HostPort": "81"
              }
            ]
          }
        ],
        "Volumes": [
          {
            "Host": {
              "SourcePath": "/opt/nginx.conf"
            },
            "Name": "nginx-proxy-conf"
          }
        ]
      }
    },
    "JODEC2Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ecs-service",
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:Describe*",
                    "elasticloadbalancing:Describe*",
                    "autoscaling:Describe*",
                    "ecs:*",
                    "ecr:*",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "JODEC2InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "DependsOn": [
        "JODEC2Role"
      ],
      "Properties": {
        "Path": "/",
        "Roles": [
          { "Ref": "JODEC2Role" }
        ]
      }
    },
    "JODECSServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [ "sts:AssumeRole" ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ecs.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ecs-service",
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "elasticloadbalancing:Describe*",
                    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                    "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                    "ec2:Describe*",
                    "ec2:AuthorizeSecurityGroupIngress"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    }
  }
}
